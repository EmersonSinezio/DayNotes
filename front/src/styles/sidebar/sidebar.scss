@mixin button {
  width: 80%;
  margin: 10px 0;
  padding: 10px 0;
  border: none;
  border-radius: 5px;
  background-color: #eb8f7a;
  box-shadow: 0 0 14px 0 rgba(0, 0, 0, 0.2);
  cursor: pointer;
  transition: 0.5s;
  &:hover {
    background-color: #fabbad;
    color: #333;
  }
}

@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}
@mixin flex-between {
  display: flex;
  justify-content: space-between;
  align-items: center;
}
@mixin flex-around {
  display: flex;
  justify-content: space-around;
  align-items: center;
}

@mixin sidebar-icon {
  width: 50px;
  height: 50px;
  border-radius: 50%;
  background-color: #333;
  color: #fff;
  @include flex-center;
  margin: 2rem auto;
  position: relative;
  right: -160px;
  top: 50vh;
}

.sidebar-container {
  position: fixed;
  width: 320px;
  height: 100vh;
  background-color: #fff;
  box-shadow: 0 0 14px 0 rgba(0, 0, 0, 0.2);
  border-radius: 10px;
  padding: 30px 20px;
  top: 0;
  left: 0;
  text-align: center;
  .sidebar-content {
    flex-direction: column;
    height: 100%;
    @include flex-around;
  }
  .buttons {
    #link {
      button {
        @include button;
      }
    }
  }
  h3 {
    margin: 1rem auto;
  }
}
.open {
  left: 0;
  transition: 0.5s;
}
.close {
  left: -280px;
  transition: 0.5s;
}
.sidebar-icon {
  @include sidebar-icon;
}
.sidebar-icon:hover {
  cursor: pointer;
  background-color: #eb8f7a;
  transition: 0.5s;
}
.sidebar-icon-close {
  @include sidebar-icon;
  transition: transform 0.5s ease-in-out;
}
.sidebar-icon-open {
  transform: rotate(180deg);
  width: 50px;
  height: 50px;
  border-radius: 50%;
  background-color: #333;
  color: #fff;
  @include flex-center;
  margin: 2rem auto;
  position: relative;
  right: -160px;
  top: 50vh;
  transition: transform 0.5s ease-in-out;
}
#user-icon {
  width: 50px;
  height: 50px;
  border-radius: 50%;
  background-color: #333;
  color: #fff;
  @include flex-center;
  margin: 2rem auto;
}
.sidebar-buttons {
  width: 100%;
  @include flex-center;
  flex-direction: column;
  position: relative;
  button {
    @include button();
  }
}

// --------
/* ThemeSwitch.scss */
// Apenas variáveis em Sass
$hue: 223;
$trans-dur: 0.3s;
$trans-timing: cubic-bezier(0.76, 0.05, 0.24, 0.95);
$trans-timing-in: cubic-bezier(0.76, 0.05, 0.86, 0.06);
$trans-timing-out: cubic-bezier(0.05, 0.76, 0.06, 0.86);

// Estilos do switch de tema
// Variáveis
$hue: 223;
$primary: hsl($hue, 90%, 50%);
$trans-dur: 0.3s;
$trans-timing: cubic-bezier(0.76, 0.05, 0.24, 0.95);
$trans-timing-in: cubic-bezier(0.76, 0.05, 0.86, 0.06);
$trans-timing-out: cubic-bezier(0.05, 0.76, 0.06, 0.86);

// Mixin para transições
// Variáveis
$hue: 223;
$primary: hsl($hue, 90%, 50%);
$trans-dur: 0.3s;
$trans-timing: cubic-bezier(0.76, 0.05, 0.24, 0.95);
$trans-timing-in: cubic-bezier(0.76, 0.05, 0.86, 0.06);
$trans-timing-out: cubic-bezier(0.05, 0.76, 0.06, 0.86);

// Estilos gerais para o componente
.switch {
  margin: auto;
  position: relative;

  &__input,
  &__icon {
    display: block;
  }

  &__icon {
    position: absolute;
    top: 0.375em;
    right: 0.375em;
    width: 0.75em;
    height: 0.75em;
    transition: opacity calc(#{$trans-dur} / 2),
      transform calc(#{$trans-dur} / 2);

    polyline {
      transition: stroke-dashoffset calc(#{$trans-dur} / 2);
    }

    &--light,
    &--light polyline {
      transition-delay: calc(#{$trans-dur} / 2);
      transition-timing-function: $trans-timing-out;
    }

    &--dark {
      opacity: 0;
      transform: translateX(-0.75em) rotate(30deg) scale(0.75);
      transition-timing-function: $trans-timing-in;
    }
  }

  &__input {
    background-color: hsl(210, 90%, 70%);
    border-radius: 0.75em;
    box-shadow: 0 0 0 0.125em hsla($hue, 90%, 50%, 0),
      0.125em 0.125em 0.25em hsla($hue, 90%, 10%, 0.2);
    outline: transparent;
    position: relative;
    width: 3.5em;
    height: 1.5em;
    -webkit-appearance: none;
    appearance: none;
    -webkit-tap-highlight-color: transparent;
    transition: background-color $trans-dur $trans-timing,
      box-shadow 0.15s linear;

    &:focus-visible {
      box-shadow: 0 0 0 0.125em $primary,
        0.125em 0.125em 0.25em hsla($hue, 90%, 10%, 0.2);
    }

    &:before,
    &:after {
      content: "";
      display: block;
      position: absolute;
    }

    &:before {
      background-color: hsl(50, 90%, 50%);
      border-radius: inherit;
      mask-image: linear-gradient(
        120deg,
        hsl(0, 0%, 0%) 20%,
        hsla(0, 0%, 0%, 0) 80%
      );
      -webkit-mask-image: linear-gradient(
        120deg,
        hsl(0, 0%, 0%) 20%,
        hsla(0, 0%, 0%, 0) 80%
      );
      inset: 0;
      transition: background-color $trans-dur $trans-timing;
    }

    &:after {
      background-color: hsl(0, 0%, 100%);
      border-radius: 50%;
      box-shadow: 0.05em 0.05em 0.05em hsla($hue, 90%, 10%, 0.1);
      top: 0.125em;
      left: 0.125em;
      width: 1.25em;
      height: 1.25em;
      transition: background-color $trans-dur $trans-timing,
        transform $trans-dur $trans-timing;
      z-index: 1;
    }

    &:checked {
      background-color: hsl(290, 90%, 40%);

      &:before {
        background-color: hsl(220, 90%, 40%);
      }

      &:after {
        background-color: hsl(0, 0%, 0%);
        transform: translateX(1.5em);
      }

      ~ .switch__icon--light,
      ~ .switch__icon--light polyline {
        transition-delay: 0s;
        transition-timing-function: $trans-timing-in;
      }

      ~ .switch__icon--light {
        opacity: 0;
        transform: translateX(-0.75em) rotate(-30deg) scale(0.75);
      }

      ~ .switch__icon--light polyline {
        stroke-dashoffset: 1.5;
      }

      ~ .switch__icon--dark {
        opacity: 1;
        transform: translateX(-1.5em);
        transition-delay: calc(#{$trans-dur} / 2);
        transition-timing-function: $trans-timing-out;
      }
    }
  }

  &__sr {
    overflow: hidden;
    position: absolute;
    width: 1px;
    height: 1px;
  }
}
